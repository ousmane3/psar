Rose(x)
(Rose(x)) 
(((est_rose(x)))) 
Ux Rose(x)		
Ux (Rose(x))
Ux ((Rose(x))) 
Ux (((Rose(x))))
(Ux Rose(x))
(Ux ((Rose(x))))
Ux Ey Rose(x)
Ux Ey ((Rose(x)))
Ux ((Ey(((Rose(x))))))
(((Ux ((Ey(((Rose(x)))))))))
(((Ux Ey Rose(x))))
((((Ux(((Rose(x))))))))
Rose(x) ^ Rose(x) ^ Rose(x) ^ Rose(x)
!!!Rose(x) ^ !Rose(x) ^ !!Rose(x) ^ !Rose(x)
((Rose(x))) ^ Rose(x)
Rose(x) V (((Rose(x))))
(((Rose(x)))) V (((Rose(x))))
((((((Rose(x)))) V (((Rose(x)))))))
Ux Ey ((((((Rose(x)))) V (((Rose(x)))))))
Ux ((Ey ((((((Rose(x)))) V (((Rose(x)))))))))
((Ux ((Ey ((((((Rose(x)))) V (((Rose(x)))))))))))
((Ux ((Ey ((((((Rose(x) V Rose(x)))) ^ (((Rose(x) V Rose(x)))))))))))
Ux(Rose(x)=>est_entre(x,y,z))
Ux ((Rose(x)=>!(est_entre(x,y,z)^Paquerette(y)))V(a_l_est_de(x,y)<=>(x=a)))
((Ux ((Rose(x)=>((!(est_entre(x,y,z)))^Paquerette(y)))V(((a_l_est_de(x,y)<=>(x=a)))))))
Ux (((est_grand(x))) => (est_rouge(x)))^ !Ex (est_blanc(x) ^ Ey(est_rouge(y) ^ au_sud_de(x, y)))
Ux (est_grand(x) => est_rouge(x))^ !Ex (est_blanc(x) ^ Ey(est_rouge(y) ^ au_sud_de(x, y)))
Ex (est_rouge(x) ^ au_nord_de(x, g))	
Ex (est_entre(x,y,z)^ a_l_ouest_de(x,y))
Ex ((Rose(x) ^ est_rouge(x)) ^ (Uy ((Rose(y) ^ est_rouge(y)) => x=y)))
Ux (a_l_est(x) V a_l_ouest(x) V au_sud(x) V au_nord(x))
Ux (Ey (Rose(x)=>est_entre(x,y,z)=>a_l_ouest_de(x,y)=>au_sud(x)))
Ux (est_blanc(x) => Ey (plus_petit_que(x, y) ^ a_l_est_de(y, x)))